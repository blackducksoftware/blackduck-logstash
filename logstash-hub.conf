input {
    beats {
        port => 5044
    }
    log4j {
        mode => server
        host => "0.0.0.0"
        port => 4560
        type => "log4j"
    }
}

filter {
    if [category] == "app-log" {
          mutate {
             copy => { "message" => "[@metadata][raw_message]" }
          }
          grok {
            patterns_dir => ["/usr/share/logstash/pipeline/patterns"]
            match => { "message" => "((?m)%{JAVACLASS:exception}:\s*%{GREEDYDATA:message})|(^%{TIMESTAMP_ISO8601:date}(\[[A-Z]{3}\])?\s*\[%{NOTSPACE:thread}\]\s*%{LOGLEVEL:level}\s*%{JAVACLASS:cls}\s*(\[%{NOTSPACE:workerName}?\])?\s*(\[%{NOTSPACE:jobInstanceId}?\])?\s*%{JAVAFILE:shortClass}?\s*[-:]?\s*%{GREEDYDATA:message})"  }
            overwrite => [ "message" ]
          }
          date {
            match => [ "date", "yyyy-MM-dd HH:mm:ss,SSS", "yyyy-MM-dd HH:mm:ss", "ISO8601" ]
          }
          if [exception] {
              mutate {
                add_field => {"level" => "STACKTRACE"}
              }
          }
    }

    if [category] == "gc-log" {
          date {
            match => [ "date", "ISO8601"]
          }
          mutate {
            add_field => {"level" => "GC"}
          }
    }

    if [category] == "access-log" {
          grok {
            patterns_dir => ["/usr/share/logstash/pipeline/patterns"]
            match => { "message" => "%{IP:remotehost} %{NOTSPACE} %{NOTSPACE:username} \[%{HTTPDATE:date}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-)"  }
          }
          date {
            match => [ "date", "dd/MMM/yyyy:HH:mm:ss Z"]
          }
          mutate {
            replace => { "message" => "%{remotehost} %{verb} %{request} %{response}" }
            add_field => {"level" => "ACCESS"}
          }
    }

    if [category] == "postgres-log" {
          grok {
            patterns_dir => ["/usr/share/logstash/pipeline/patterns"]
            match => { "message" => "%{TIMESTAMP_PGSQL:date} %{POSINT:process_id} %{PG_LOGLEVEL:level}:\s*%{GREEDYDATA:message}"  }
            overwrite => [ "message" ]
          }
          date {
            match => [ "date", "yyyy-MM-dd HH:mm:ss.SSS ZZZ"]
          }
    }

}

output {
    #elasticsearch { hosts => ["elasticsearch:9200"] }

    if [category] == "app-log" {
        file {
            path => "/var/lib/logstash/data/%{application}/%{category}/%{+YYYY-MM-dd}.log"
            codec => line { format => "[%{host}] %{[@metadata][raw_message]}" }
            dir_mode => 0775
            file_mode => 0664
        }
    } else {
    	# WIP - This is changing, once all containers are configured, there could be less 'if else' blocks  
    	if [category] {
	        file {
	            codec => line { format => "[%{host}] %{message}" }
	            path => "/var/lib/logstash/data/%{application}/%{category}/%{+YYYY-MM-dd}.log"
	            dir_mode => 0775
	            file_mode => 0664
	        }
        } else {
        	file {
	            codec => line { format => "[%{host}] %{message}" }
	            path => "/var/lib/logstash/data/%{application}/%{+YYYY-MM-dd}.log"
	            dir_mode => 0775
	            file_mode => 0664
	        }
        }
    }
}